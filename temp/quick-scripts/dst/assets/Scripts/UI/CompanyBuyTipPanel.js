
                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Scripts/UI/CompanyBuyTipPanel.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'd4cf1ZNYClHfZlhOyWm3IZa', 'CompanyBuyTipPanel');
// Scripts/UI/CompanyBuyTipPanel.js

"use strict";

var CompanyBuyTipPanel = cc.Class({
  "extends": cc.Component,
  properties: {
    Atlas: cc.SpriteAtlas,
    IconSp: cc.Sprite,
    TitleName: cc.Sprite,
    BuyNumLbl: cc.Label,
    DesLbl: cc.Label,
    Slider: cc.Slider,
    InPutBox: cc.EditBox,
    Progress: cc.ProgressBar,
    BuyNum: 0,
    Data: null
  },
  ShowPanel: function ShowPanel(data) {
    this.Data = data;
    this.IconSp.spriteFrame = this.Atlas.getSpriteFrame(data.icon);
    this.TitleName.spriteFrame = this.Atlas.getSpriteFrame(data.name);
    this.BuyNum = Math.floor(cc.Mgr.UserDataMgr.Cash / (this.Data.stockPrice * 100));
    var money = Math.floor(this.BuyNum * 100 * this.Data.stockPrice);
    this.DesLbl.string = cc.Mgr.global.FormatNum(money);
    this.BuyNumLbl.string = this.BuyNum;
    this.InPutBox.string = this.BuyNum;
    this.Slider.progress = 1;
    this.Progress.progress = 1;
  },
  ClickBuyBtn: function ClickBuyBtn() {
    if (this.BuyNum <= 0) {
      cc.Mgr.AudioMgr.playSFX("click");
      return;
    }
    cc.Mgr.UserDataMgr.Cash -= Math.floor(this.Data.stockPrice * (this.BuyNum * 100));
    var param = {};
    param.Num = this.BuyNum * 100;
    param.price = this.Data.stockPrice;
    param.Id = this.Data.Id;
    var data = cc.Mgr.UserDataMgr.BuyStocks(param);
    //通知刷新现金
    cc.director.GlobalEvent.emit(cc.Mgr.Event.BuyStockSuccess, data);
    this.ClosePanel();
  },
  OnSliderChange: function OnSliderChange() {
    this.BuyNum = Math.floor(this.Slider.progress * cc.Mgr.UserDataMgr.Cash / (this.Data.stockPrice * 100));
    this.Progress.progress = this.Slider.progress;
    this.DesLbl.string = cc.Mgr.global.FormatNum(Math.floor(this.BuyNum * this.Data.stockPrice * 100));
    this.BuyNumLbl.string = this.BuyNum;
    this.InPutBox.string = this.BuyNum;
  },
  OnInputBoxEnd: function OnInputBoxEnd() {
    var MaxNum = Math.floor(cc.Mgr.UserDataMgr.Cash / (this.Data.stockPrice * 100));
    if (this.InPutBox.string != "") {
      if (Number(this.InPutBox.string) != null) {
        if (Number(this.InPutBox.string) > MaxNum) {
          this.InPutBox.string = MaxNum;
          this.BuyNum = MaxNum;
          this.Progress.progress = 1;
          this.Slider.progress = 1;
        } else {
          this.BuyNum = Number(this.InPutBox.string);
          this.Slider.progress = this.BuyNum / MaxNum;
          this.Progress.progress = this.Slider.progress;
        }
      }
    } else {
      this.InPutBox.string = "0";
      this.BuyNum = 0;
      this.Progress.progress = 0;
      this.Slider.progress = 0;
    }
    this.DesLbl.string = cc.Mgr.global.FormatNum(Math.floor(this.BuyNum * this.Data.stockPrice * 100));
  },
  ClosePanel: function ClosePanel() {
    cc.Mgr.AudioMgr.playSFX("click");
    this.node.active = false;
  }
});
module.exports = CompanyBuyTipPanel;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,