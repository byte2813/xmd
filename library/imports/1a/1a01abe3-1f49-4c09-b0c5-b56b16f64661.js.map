{"version":3,"sources":["assets\\Scripts\\Core\\GlobalEvent.js"],"names":["cc","director","GlobalEvent","handles_","emit","eventName","data","returns","findEvenName","i","length","returnValue","push","on","callback","target","bind","off","clear"],"mappings":";;;;;;AAAA;AACA;AACAA,EAAE,CAACC,QAAQ,CAACC,WAAW,GAAG;EACtBC,QAAQ,EAAE,CAAC,CAAC;EACZ;EACAC,IAAI,EAAE,SAAAA,KAAUC,SAAS,EAAEC,IAAI,EAAE;IAC7B,IAAIC,OAAO,GAAG,EAAE,EAAC;IACjB;IACAD,IAAI,CAACD,SAAS,GAAGA,SAAS;;IAE1B,KAAM,IAAIG,YAAY,IAAI,IAAI,CAACL,QAAQ,EAAE;MACrC,IAAIK,YAAY,IAAIH,SAAS,EAAE;QAC3B,KAAK,IAAII,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACN,QAAQ,CAACK,YAAY,CAAC,CAACE,MAAM,EAAED,CAAC,EAAE,EAAE;UACzD,IAAI,IAAI,CAACN,QAAQ,CAACK,YAAY,CAAC,CAACC,CAAC,CAAC,EAClC;YACI,IAAIE,WAAW,GAAG,IAAI,CAACR,QAAQ,CAACK,YAAY,CAAC,CAACC,CAAC,CAAC,CAACH,IAAI,CAAC;YACtDC,OAAO,CAACK,IAAI,CAACD,WAAW,CAAC;UAC7B;QACJ;MACJ;IACJ;IACA,OAAOJ,OAAO;EAClB,CAAC;EACD;EACAM,EAAE,EAAE,SAAAA,GAAUR,SAAS,EAAES,QAAQ,EAAEC,MAAM,EAAE;IACvC;IACA,IAAI,CAACZ,QAAQ,CAACE,SAAS,CAAC,GAAG,IAAI,CAACF,QAAQ,CAACE,SAAS,CAAC,IAAI,EAAE;IAEzD,IAAI,CAACF,QAAQ,CAACE,SAAS,CAAC,CAACO,IAAI,CAACE,QAAQ,CAACE,IAAI,CAACD,MAAM,CAAC,CAAC;EACxD,CAAC;EACD;EACAE,GAAG,EAAE,SAAAA,IAAUZ,SAAS,EAAE;IACtB,IAAI,CAAC,IAAI,CAACF,QAAQ,CAACE,SAAS,CAAC,EACzB;IAEJ,KAAK,IAAII,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACN,QAAQ,CAACE,SAAS,CAAC,CAACK,MAAM,EAAED,CAAC,EAAE,EAAE;MACtD,IAAI,CAACN,QAAQ,CAACE,SAAS,CAAC,CAACI,CAAC,CAAC,GAAG,IAAI;IACtC;EACJ,CAAC;EAED;EACAS,KAAK,EAAE,SAAAA,MAAA,EAAU;IACb,KAAM,IAAIV,YAAY,IAAI,IAAI,CAACL,QAAQ,EAAE;MACrC,KAAK,IAAIM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACN,QAAQ,CAACK,YAAY,CAAC,CAACE,MAAM,EAAED,CAAC,EAAE,EAAE;QACzD,IAAI,CAACN,QAAQ,CAACK,YAAY,CAAC,CAACC,CAAC,CAAC,GAAG,IAAI;MACzC;IACJ;EACJ;AACJ,CAAC","sourceRoot":"/","sourcesContent":["//全局事件处理  分发和监听   相当于一个全局观察者\r\n//这个事件分发处理机制 没有针对每个绑定个体的\r\ncc.director.GlobalEvent = {\r\n    handles_: {},\r\n    //发送事件 事件分发\r\n    emit: function (eventName, data) {\r\n        var returns = [] //返回值\r\n        //console.log('事件分发', eventName);\r\n        data.eventName = eventName//保存一下事件名字\r\n\r\n        for ( var findEvenName in this.handles_ ){\r\n            if (findEvenName == eventName) {\r\n                for (var i = 0; i < this.handles_[findEvenName].length; i++) {\r\n                    if (this.handles_[findEvenName][i])\r\n                    {\r\n                        var returnValue = this.handles_[findEvenName][i](data)\r\n                        returns.push(returnValue)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return returns\r\n    },\r\n    //添加普通事件  监听\r\n    on: function (eventName, callback, target) {\r\n        //console.log('完成事件注册监听', eventName);\r\n        this.handles_[eventName] = this.handles_[eventName] || []\r\n        \r\n        this.handles_[eventName].push(callback.bind(target))\r\n    },\r\n    //通过事件名和target移除一种事件监听\r\n    off: function (eventName) {\r\n        if (!this.handles_[eventName])\r\n            return;\r\n\r\n        for (var i = 0; i < this.handles_[eventName].length; i++) {\r\n            this.handles_[eventName][i] = null\r\n        }\r\n    },\r\n\r\n    //一次性清空所有数据\r\n    clear: function(){\r\n        for ( var findEvenName in this.handles_ ){\r\n            for (var i = 0; i < this.handles_[findEvenName].length; i++) {\r\n                this.handles_[findEvenName][i] = null;\r\n            }\r\n        }\r\n    },\r\n}\r\n\r\n\r\n"]}